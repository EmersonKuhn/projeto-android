@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

@font-face {
    font-family: 'Android';
    src:url('../fontes/idroid.otf') format('opentype');
    font-weight: normal;
}

:root {
   --cor0: #c5ebd6;
   --cor1: #83e1ad;
   --cor2: #3ddc84;
   --cor3: #2fa866;
   --cor4: #1a5c37;
   --cor5: #063d1e;

   --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
   --fonte-destaque: 'Bebas Neue', sans-serif;
   --fonte-android: 'Android', sans-serif;
}

* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor1);
    font-family: var(--fonte-padrao);
}

a.externo::after {
    content:'\00A0\1F517'
}

a:hover {
    color: var(--cor1);
    text-decoration: underline;
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 100px;
    text-align: center;
    padding-top: 25px;
}

header > h1 {
    color: white;
    font-family: var(--fonte-destaque);
    font-weight: normal;
    font-size: 3.5em;
    margin-bottom: 15px;
    text-shadow: 2px 3px 5px rgba(0, 0, 0, 0.493);
}

header > p {
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    color: white;
    padding-right: 10px;
    padding-left: 10px;
    padding-bottom: 20px;
    text-shadow: 2px 3px 5px rgba(0, 0, 0, 0.493);
}

nav {
    padding: 10px;
    background-color: var(--cor5);
    box-shadow: 1px 5px 11px 0px rgba(0, 0, 0, 0.582);
}

nav > a {
    color: white;
    padding: 10px;
    text-decoration: none;
    font-weight: bolder;
}

nav a:hover {
    background-color: #c5ebd6;
    color: var(--cor5);
    border-radius: 3px;
    transition-duration: 0.6s;
}

main {
    background-color: white;

    min-width: 300px;
    max-width: 817px;
    margin: auto;
    margin-bottom: 25px;
    padding: 15px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.384);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main h1 {
    background-image: linear-gradient(to right, var(--cor0), transparent);
    color: var(--cor4);
    font-family: var(--fonte-android);
    font-weight: normal;
    font-size: 1.8em;
}

main h2 {
    color: var(--cor4);
    font-family: var(--fonte-android);
    font-weight: normal;
    font-size: 1.3em;
    text-indent: 10px;
    background-image: linear-gradient(to right, var(--cor0), transparent);
}

main p {
    margin: 15px 0px;
    text-align: justify;
    text-indent: 20px;
    line-height: 1.5em;
    font-size: 1.1em;
}

main strong {
    color: var(--cor5);
    font-weight: bold;
    padding: 1px 5px;
}

main a {
    color: var(--cor5);
    background-color: var(--cor0);
    font-weight: bold;
    text-decoration: none;
    padding: 1px 5px;
}

main img {
    width: 100%;
}

main img.pequena {
    max-width: 350px;
    display: block;
    margin: auto;
}

div.video {
    background-color: var(--cor4);
    margin: 0px -15px 20px -15px;
    padding: 10px;
    padding-bottom: 57.15%;

    position: relative;
}

div.video > iframe {
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

aside {
    padding: 4px;
    background-color: var(--cor1);
    border-radius: 10px;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.466);
}

aside h3 {
    color: black;
    background-color: var(--cor3);
    padding: 8px;
    margin: -4px;
    border-top-right-radius: 10px;
    border-top-left-radius: 10px;
    box-shadow: 2px 0px 8px rgba(0, 0, 0, 0.466);
}

aside > ul {
    margin: 4px;
    list-style-type: '\2714\00A0\00A0';
    list-style-position: inside;
    columns: 2;
    color: black;
}

footer {
    background-color: var(--cor4);
}

footer a {
    color: white;
    text-decoration: none;
}

footer a:hover {
    color: var(--cor0);
}

footer > p {
    text-align: center;
    padding: 5px;
    margin: auto;
}

/*
PROPRIEDADE DE ESTILO - POSITION:

O posicionamento padrão de todo elemento no HTML é o "estático". Todo elemento estático é posicionado no canto superior esquerdo no corpo do documento ou do elemento onde ele está contido. Esta é a posição 0 de um elemento no corpo do documento.

A Propriedade de Estilo " position " é utilizada para determinar o posicionamento e hierarquia dos elementos na página do documento.

PROPRIEDADES AUXILIARES DO POSITION:

A Propriedade de Estilo "position" vem ACOMPANHADA e é usada em conjunto com quatro outras propriedades auxiliares (são propriedades e NÃO valores para position), que são: 

top - (topo) 

bottom - (baixo)

right - (direita)

left - (esquerda)

Essas quatro propriedades irão determinar a localização final do objeto, irão deslocar o elemento conforme for especificado.

Por exemplo, se usamos a propriedade "top" com o valor de 20px em um elemento, o mesmo vai se deslocar do topo num total de 20px para baixo.

VALORES DA PROPRIEDADE POSITION:

Para a propriedade position, é possível atribuir 5 valores, que são: static, relative, absolute, fixed e sticky.

Funções dos valores mais usados:

static - (estático):

O valor padrão da propriedade position é o static. Se não determinarmos nada, é esse valor que vai prevalecer por "debaixo dos panos". Ele não indica posicionamento algum, ou seja, é o valor para "nenhum posicionamento específico" do elemento. A função dele é manter a hierarquia de posicionamento conforme já estabelecido no documento HTML.

Isso significa que aquelas quatro outras propriedades já citadas (top, bottom, left e right) não funcionarão, não irão alterar a posição do elemento se usadas juntamente com esse valor... Visto que o position já está como "static" por padrão.

relative - (relativo):

O valor relative posiciona um elemento em relação à sua posição "normal"... Ou seja, as quatro propriedades auxiliares (top, bottom, left e right) vão fazer com que o elemento seja ajustado A PARTIR DA SUA POSIÇÃO ORIGINAL.

Após ter definido o tipo de position (relative nesse caso), a posição do elemento é definida através das quatro propriedades auxiliares do position: top, bottom, left e right. Que indicam a distância com relação ao topo, base, esquerda e direita, respectivamente, tomando como REFERÊNCIA DE POSICIONAMENTO (no caso do valor relative) a posição original do elemento. (se não configurarmos valores de posicionamento com as propriedades auxiliares, o elemento simplesmente fica no mesmo lugar)

absolute - (absoluto):

Um elemento com o valor absolute para position vai ser disposto, com as propriedades auxiliares, de forma relativa ao seu elemento pai... DESDE QUE ESSE ELEMENTO PAI TENHA UM POSITION COM UM VALOR DIFERENTE DE "STATIC" DEFINIDO!
 
Se o elemento pai não ter um position com um valor diferente de "static" definido, o valor absolute faz com que o elemento configurado " saia " da hierarquia estabelecida pelo HTML. 

Um elemento com o position absolute é disposto em relação ao elemento de nível superior mais próximo dele que possui um position com um valor diferente de "static" definido... E como já foi dito, caso não exista nenhum elemento hierarquicamente de nível superior (pai ou "avô") que tenha um position sem ser o "static" definido, o position absolute será absoluto ao corpo da página (body).

Na prática, em elementos do tipo filho com o pai sem a propriedade position, o valor absolute "transforma" filhos de elementos em FILHOS DA PÁGINA (body). Assim, é possível posicionarmos um elemento filho (transformado) em qualquer lugar da página (fora do pai), independentemente do que temos lá. Isso pode ser útil em casos que precisamos posicionar um alerta em nossa página, por exemplo, e não queremos "quebrar" o layout. ---

Dessa forma, note que o position absolute possui dois comportamentos diferentes, que se manifestam dependendo da configuração do elemento pai ou elemento de nível superior.

Nota: Perceba que o Guanabara configurou o filho da div (iframe) com a declaração "position: absolute" e o pai (a div) com a declaração "position: relative"... Dessa forma o elemento filho (iframe) é posicionado, com as propriedades auxiliares, em relação ao seu pai (div).
*/
